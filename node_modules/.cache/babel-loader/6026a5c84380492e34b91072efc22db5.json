{"ast":null,"code":"import _classCallCheck from \"/Users/andrewmaclean/cleverdistraction/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/andrewmaclean/cleverdistraction/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/andrewmaclean/cleverdistraction/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/andrewmaclean/cleverdistraction/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/andrewmaclean/cleverdistraction/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/andrewmaclean/cleverdistraction/src/Components/Pages/Game/index.js\";\nimport React, { Component } from 'react';\nimport Draggable from 'react-draggable';\nimport Controls from './Controls';\n\nvar Game =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Game, _Component);\n\n  function Game() {\n    var _this;\n\n    _classCallCheck(this, Game);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Game).call(this));\n\n    _this.onStart = function () {\n      _this.setState({\n        activeDrags: ++_this.state.activeDrags\n      });\n    };\n\n    _this.onStop = function () {\n      _this.setState({\n        activeDrags: --_this.state.activeDrags\n      });\n    };\n\n    _this.handleDrag = function (e, ui) {\n      var _this$state$deltaPosi = _this.state.deltaPosition,\n          x = _this$state$deltaPosi.x,\n          y = _this$state$deltaPosi.y;\n\n      _this.setState({\n        deltaPosition: {\n          x: x + ui.deltaX,\n          y: y + ui.deltaY\n        }\n      });\n    };\n\n    _this.moveBoard = function (e) {\n      var boardPosition = _this.state.boardPosition,\n          screen = _this.screenParams.current,\n          screenX = screen.getBoundingClientRect().x,\n          screenY = screen.getBoundingClientRect().y,\n          boardX = e.target.getBoundingClientRect().x,\n          boardY = e.target.getBoundingClientRect().y;\n\n      if (e.clientX !== 0 || e.clientY !== 0) {\n        boardPosition.x = e.clientX - screenX;\n        boardPosition.y = e.clientY - screenY;\n      }\n\n      _this.setState({\n        boardPosition: boardPosition\n      });\n    };\n\n    _this.toggleLine = function () {};\n\n    _this.toggleRectange = function () {};\n\n    _this.state = {\n      boardSize: {\n        width: 1000,\n        height: 1000\n      },\n      activeDrags: 0,\n      deltaPosition: {\n        x: 0,\n        y: 0\n      },\n      controlledPosition: {\n        x: -400,\n        y: 200\n      }\n    };\n    return _this;\n  }\n\n  _createClass(Game, [{\n    key: \"drawBoard\",\n    value: function drawBoard() {\n      var handlers = {\n        onStart: this.onStart,\n        onStop: this.onStop\n      };\n      return React.createElement(Draggable, Object.assign({\n        onDrag: this.handleDrag\n      }, handlers, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"board\",\n        style: {\n          width: this.state.boardSize.width,\n          height: this.state.boardSize.height\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }));\n      return React.createElement(\"div\", {\n        className: \"board\",\n        onDrag: this.moveBoard,\n        style: {\n          width: this.state.boardSize.width,\n          height: this.state.boardSize.height\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var board = this.drawBoard();\n      return React.createElement(\"div\", {\n        className: \"Game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, board, React.createElement(Controls, {\n        toggleRectange: this.toggleRectange,\n        toggleLine: this.toggleLine,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Game;\n}(Component);\n\nexport default Game;","map":{"version":3,"sources":["/Users/andrewmaclean/cleverdistraction/src/Components/Pages/Game/index.js"],"names":["React","Component","Draggable","Controls","Game","onStart","setState","activeDrags","state","onStop","handleDrag","e","ui","deltaPosition","x","y","deltaX","deltaY","moveBoard","boardPosition","screen","screenParams","current","screenX","getBoundingClientRect","screenY","boardX","target","boardY","clientX","clientY","toggleLine","toggleRectange","boardSize","width","height","controlledPosition","handlers","board","drawBoard"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Draggable from 'react-draggable';\n\nimport Controls from './Controls';\n\nclass Game extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\tboardSize: {\n\t\t\t\twidth: 1000,\n\t\t\t\theight: 1000\n\t\t\t},\n\t\t\tactiveDrags: 0,\n\t\t\tdeltaPosition: {\n\t\t\t\tx: 0,\n\t\t\t\ty: 0\n\t\t\t},\n\t\t\tcontrolledPosition: {\n\t\t\t\tx: -400,\n\t\t\t\ty: 200\n\t\t\t}\n\t\t}\n\t}\n\n\tonStart = () => {\n\t\tthis.setState({ activeDrags: ++this.state.activeDrags });\n\t}\n\n\tonStop = () => {\n\t\tthis.setState({ activeDrags: --this.state.activeDrags });\n\t}\n\n\thandleDrag = (e, ui) => {\n\t\tconst {x, y} = this.state.deltaPosition;\n\t\tthis.setState({\n\t\t\tdeltaPosition: {\n\t\t\t\tx: x + ui.deltaX,\n\t\t\t\ty: y + ui.deltaY\n\t\t\t}\n\t\t});\n\t}\n\n\tmoveBoard = e => {\n\t\tlet boardPosition = this.state.boardPosition,\n\t\t\tscreen = this.screenParams.current,\n\t\t\tscreenX = screen.getBoundingClientRect().x,\n\t\t\tscreenY = screen.getBoundingClientRect().y,\n\t\t\tboardX = e.target.getBoundingClientRect().x,\n\t\t\tboardY = e.target.getBoundingClientRect().y;\n\n\n\t\tif (e.clientX !== 0 || e.clientY !== 0) {\n\t\t\tboardPosition.x = e.clientX - screenX;\n\t\t\tboardPosition.y = e.clientY - screenY;\n\t\t}\n\n\t\tthis.setState({ boardPosition });\n\t}\n\n\ttoggleLine = () => {\n\n\t}\n\n\ttoggleRectange = () => {\n\t\t\n\t}\n\n\tdrawBoard() {\n\t\tconst handlers = {onStart: this.onStart, onStop: this.onStop};\n\t\treturn <Draggable onDrag={this.handleDrag} {...handlers}>\n            <div className=\"board\"\n            style={{\n            \twidth: this.state.boardSize.width,\n            \theight: this.state.boardSize.height,\n            }}>\n            </div>\n            </Draggable>\n\t\treturn <div\n\t\t\tclassName=\"board\"\n\t\t\tonDrag={this.moveBoard}\n\t\t\tstyle={{\n\t\t\t\twidth: this.state.boardSize.width,\n\t\t\t\theight: this.state.boardSize.height\n\t\t\t}}>\n\n\t\t</div>\n\t}\n\n\trender() {\n\t\tconst board = this.drawBoard();\n\t    return (<div className=\"Game\">\n\t    \t{board}\n\t    \t<Controls \n\t    \t\ttoggleRectange={this.toggleRectange}\n\t    \t\ttoggleLine={this.toggleLine} />\n\t    </div>);\n\t}\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}