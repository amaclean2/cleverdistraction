{"ast":null,"code":"import _classCallCheck from \"/Users/andrewmaclean/cleverdistraction/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/andrewmaclean/cleverdistraction/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/andrewmaclean/cleverdistraction/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/andrewmaclean/cleverdistraction/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/andrewmaclean/cleverdistraction/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/andrewmaclean/cleverdistraction/src/Components/Pages/Game.js\";\nimport React, { Component } from 'react';\nimport Draggable from 'react-draggable';\n\nvar Game =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Game, _Component);\n\n  function Game() {\n    var _this;\n\n    _classCallCheck(this, Game);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Game).call(this));\n\n    _this.onStart = function () {\n      _this.setState({\n        activeDrags: ++_this.state.activeDrags\n      });\n    };\n\n    _this.onStop = function () {\n      _this.setState({\n        activeDrags: --_this.state.activeDrags\n      });\n    };\n\n    _this.moveBoard = function (e) {\n      var boardPosition = _this.state.boardPosition,\n          screen = _this.screenParams.current,\n          screenX = screen.getBoundingClientRect().x,\n          screenY = screen.getBoundingClientRect().y,\n          boardX = e.target.getBoundingClientRect().x,\n          boardY = e.target.getBoundingClientRect().y;\n\n      if (e.clientX !== 0 || e.clientY !== 0) {\n        boardPosition.x = e.clientX - screenX;\n        boardPosition.y = e.clientY - screenY;\n      }\n\n      _this.setState({\n        boardPosition: boardPosition\n      });\n    };\n\n    _this.state = {\n      boardSize: {\n        width: 1000,\n        height: 1000\n      },\n      activeDrags: 0,\n      deltaPosition: {\n        x: 0,\n        y: 0\n      },\n      controlledPosition: {\n        x: -400,\n        y: 200\n      }\n    };\n    _this.screenParams = React.createRef();\n    return _this;\n  }\n\n  _createClass(Game, [{\n    key: \"drawBoard\",\n    value: function drawBoard() {\n      var handlers = {\n        onStart: this.onStart,\n        onStop: this.onStop\n      };\n      return React.createElement(Draggable, Object.assign({\n        bounds: \"parent\"\n      }, handlers, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"board\",\n        style: {\n          width: this.state.boardSize.width,\n          height: this.state.boardSize.height\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }));\n      return React.createElement(\"div\", {\n        className: \"board\",\n        onDrag: this.moveBoard,\n        style: {\n          width: this.state.boardSize.width,\n          height: this.state.boardSize.height\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var board = this.drawBoard();\n      return React.createElement(\"div\", {\n        className: \"Game\",\n        ref: this.screenParams,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, board);\n    }\n  }]);\n\n  return Game;\n}(Component);\n\nexport default Game;","map":{"version":3,"sources":["/Users/andrewmaclean/cleverdistraction/src/Components/Pages/Game.js"],"names":["React","Component","Draggable","Game","onStart","setState","activeDrags","state","onStop","moveBoard","e","boardPosition","screen","screenParams","current","screenX","getBoundingClientRect","x","screenY","y","boardX","target","boardY","clientX","clientY","boardSize","width","height","deltaPosition","controlledPosition","createRef","handlers","board","drawBoard"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Draggable from 'react-draggable';\n\nclass Game extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\tboardSize: {\n\t\t\t\twidth: 1000,\n\t\t\t\theight: 1000\n\t\t\t},\n\t\t\tactiveDrags: 0,\n\t\t\tdeltaPosition: {\n\t\t\t\tx: 0,\n\t\t\t\ty: 0\n\t\t\t},\n\t\t\tcontrolledPosition: {\n\t\t\t\tx: -400,\n\t\t\t\ty: 200\n\t\t\t}\n\t\t}\n\t\tthis.screenParams = React.createRef();\n\t}\n\n\tonStart = () => {\n\t\tthis.setState({ activeDrags: ++this.state.activeDrags });\n\t}\n\n\tonStop = () => {\n\t\tthis.setState({ activeDrags: --this.state.activeDrags });\n\t}\n\n\tmoveBoard = e => {\n\t\tlet boardPosition = this.state.boardPosition,\n\t\t\tscreen = this.screenParams.current,\n\t\t\tscreenX = screen.getBoundingClientRect().x,\n\t\t\tscreenY = screen.getBoundingClientRect().y,\n\t\t\tboardX = e.target.getBoundingClientRect().x,\n\t\t\tboardY = e.target.getBoundingClientRect().y;\n\n\n\t\tif (e.clientX !== 0 || e.clientY !== 0) {\n\t\t\tboardPosition.x = e.clientX - screenX;\n\t\t\tboardPosition.y = e.clientY - screenY;\n\t\t}\n\n\t\tthis.setState({ boardPosition });\n\t}\n\n\tdrawBoard() {\n\t\tconst handlers = {onStart: this.onStart, onStop: this.onStop};\n\t\treturn <Draggable bounds=\"parent\" {...handlers}>\n            <div className=\"board\"\n            style={{\n            \twidth: this.state.boardSize.width,\n            \theight: this.state.boardSize.height,\n            }}>\n            </div>\n            </Draggable>\n\t\treturn <div\n\t\t\tclassName=\"board\"\n\t\t\tonDrag={this.moveBoard}\n\t\t\tstyle={{\n\t\t\t\twidth: this.state.boardSize.width,\n\t\t\t\theight: this.state.boardSize.height\n\t\t\t}}>\n\n\t\t</div>\n\t}\n\n\trender() {\n\t\tconst board = this.drawBoard();\n\t    return (<div className=\"Game\" ref={this.screenParams} >\n\t    \t{board}\n\t    </div>);\n\t}\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}