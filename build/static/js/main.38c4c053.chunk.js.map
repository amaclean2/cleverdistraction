{"version":3,"sources":["components/main/nav.js","components/main/header.js","components/main/home.js","components/pages/projects.js","components/pages/blogs.js","components/pages/pictures.js","App.js","serviceWorker.js","index.js"],"names":["NavDrawer","react_default","a","createElement","className","this","props","hidden","onClick","toggle","NavLink","to","Component","Header","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","navShow","toggleNavVis","bind","assertThisInitialized","setState","aria-hidden","nav","Home","Projects","href","target","Blogs","Pictures","App","id","header","Route","exact","path","component","content","primaryContent","BrowserRouter","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.38c4c053.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nclass NavDrawer extends Component {\n  render() {\n    return (\n\t    <div className={\"nav-container \" + (this.props.hidden ? 'hidden' : '')}>\n\t    \t<div className=\"nav-background\" onClick={this.props.toggle}></div>\n\t    \t<div className=\"nav-drawer\">\n\t    \t\t<div className=\"head-spacing\"></div>\n\t    \t\t<NavLink className={'special-link'} to='/' onClick={this.props.toggle}>Home</NavLink>\n\t    \t\t<NavLink to='/projects' onClick={this.props.toggle}>Projects</NavLink>\n\t    \t\t{/*<NavLink to='/ideas' onClick={this.props.toggle}>Ideas</NavLink>*/}\n\t    \t\t<NavLink to='/blogs' onClick={this.props.toggle}>Notes</NavLink>\n\t    \t\t<NavLink to='/images' onClick={this.props.toggle}>Exploring</NavLink>\n\t    \t\t<NavLink to='/about' onClick={this.props.toggle}>About Andrew</NavLink>\n\t    \t</div>\n\t    </div>\n    );\n  }\n}\n\nexport default NavDrawer;\n","import React, { Component } from 'react';\nimport NavDrawer from './nav';\n\nclass Header extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\tnavShow: true,\n\t\t}\n\n\t\tthis.toggleNavVis = this.toggleNavVis.bind(this);\n\t}\n\n\ttoggleNavVis() {\n\t\tthis.setState({ navShow: !this.state.navShow });\n\t}\n\n  \trender() {\n    \treturn (\n      \t\t<div className=\"header\">\n        \t\t<i className=\"fa fa-bars menu-clickable\" aria-hidden=\"true\" onClick={this.toggleNavVis} ></i>\n        \t\t<NavDrawer toggle={this.toggleNavVis} hidden={this.state.navShow} />\n      \t\t</div>\n    \t);\n  \t}\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport NavDrawer from './nav';\n\nclass Home extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\tnavShow: true,\n\t\t}\n\n\t\tthis.toggleNavVis = this.toggleNavVis.bind(this);\n\t}\n\n\ttoggleNavVis() {\n\t\tthis.setState({ navShow: !this.state.navShow });\n\t}\n\n  \trender() {\n    \treturn (\n      \t\t<div className=\"title-text\">\n        \t\t<h1>Clever Distraction</h1>\n      \t\t</div>\n    \t);\n  \t}\n}\n\nexport default Home;\n","import React, { Component } from 'react';\n\nclass Projects extends Component {\n\n  \trender() {\n    \treturn (\n      \t\t<div className=\"pages projects\">\n        \t\t<h2>Projects</h2>\n        \t\t<div className=\"content-container\">\n        \t\t\t<div className=\"content\">\n\t        \t\t\t<div className=\"link-card\">\n\t        \t\t\t\t<div className=\"link-content toolbox\"></div>\n\t\t        \t\t\t<a className=\"link-desc\" href=\"http://toolboxproject.io\" target=\"_blank\">\n\t\t        \t\t\t\t<span className=\"link-title\" >Toolbox -</span><br />\n\t\t        \t\t\t\tis a project to organize and visualize the production of machine shops.<br />\n\t\t        \t\t\t\tBringing a UI focus to shop management could revolutionize the industry.\n\t\t        \t\t\t</a>\n\t        \t\t\t</div>\n\t        \t\t\t<div className=\"link-card\">\n\t        \t\t\t\t<div className=\"link-content lesson-box\"></div>\n\t\t        \t\t\t<a className=\"link-desc\" href=\"http://amaclean2.github.io\" target=\"_blank\">\n\t\t        \t\t\t\t<span className=\"link-title\" >The Lesson Box</span><br />\n\t\t        \t\t\t\tLets make it as easy as possible to get started in programming.<br />\n\t\t        \t\t\t\tThe Lesson Box is a set of daily lessons building coding skills in Python.\n\t\t        \t\t\t\t(I gotta keep up)\n\t\t        \t\t\t</a>\n\t        \t\t\t</div>\n\t        \t\t\t<div className=\"link-card\">\n\t        \t\t\t\t<div className=\"link-content devfest\"></div>\n\t\t        \t\t\t<a className=\"link-desc\" href=\"http://devfestsf.com\" target=\"_blank\">\n\t\t        \t\t\t\t<span className=\"link-title\" >Devfest -</span><br />\n\t\t        \t\t\t\tis a meet-up to educate young developers in technologies and opportunities in the programming world.\n\t\t        \t\t\t</a>\n\t        \t\t\t</div>\n\t        \t\t</div>\n        \t\t</div>\n      \t\t</div>\n    \t);\n  \t}\n}\n\nexport default Projects;\n","import React, { Component } from 'react';\n\nclass Blogs extends Component {\n\n  \trender() {\n    \treturn (\n      \t\t<div className=\"pages blogs\">\n        \t\t<h2>What's Happening</h2>\n        \t\t<div className=\"content\">\n        \t\t\t<span className=\"link-title\">Check It Out</span>\n              <p>Code, Music, and Climbing <br />\n              This is text to fill out a couple lines of a paragraph. I need to understand what it is supposed to look like when I fill this place with some text.</p>\n              <a target=\"_blank\" href=\"https://clever-distraction-blog.firebaseapp.com\" className=\"blog-button button\">Take A Look</a>\n        \t\t</div>\n      \t\t</div>\n    \t);\n  \t}\n}\n\nexport default Blogs;\n","import React, { Component } from 'react';\n\nclass Pictures extends Component {\n\n  \trender() {\n    \treturn (\n      \t\t<div className=\"pages pictures\">\n        \t\t<h2>All The Colors</h2>\n        \t\t\n      \t\t</div>\n    \t);\n  \t}\n}\n\nexport default Pictures;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport Header from './components/main/header';\nimport Home from './components/main/home';\nimport Projects from './components/pages/projects';\nimport Blogs from './components/pages/blogs';\nimport Pictures from './components/pages/pictures';\n\nclass App extends Component {\n\n  primaryContent() {\n    return (\n      <div id=\"Main/App\"> \n        <Header />\n        <div className=\"page-content\">\n          <Route exact path='/' component={Home} />\n          <Route path='/projects' component={Projects} />\n          <Route path='/ideas' component={Header} />\n          <Route path='/blogs' component={Blogs} />\n          <Route path='/images' component={Pictures} />\n          <Route path='/about' component={Header} />\n        </div>\n      </div> );\n  }\n\n  render() {\n    let content = this.primaryContent();\n    return (\n        <BrowserRouter>\n          {content}\n        </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}